name: 'Cargo build and test'
on:
 workflow_dispatch:
 push:
   branches:
     - main
 pull_request:
   branches:
     - main

jobs:
 test-tauri:
   strategy:
     fail-fast: false
     matrix:
       include:
         - platform: 'macos-latest'
           args: '--target aarch64-apple-darwin'
         - platform: 'macos-latest'
           args: '--target x86_64-apple-darwin'
         - platform: 'ubuntu-22.04'
           args: ''
         - platform: 'windows-latest'
           args: ''
   runs-on: ${{ matrix.platform }}
   steps:
     - uses: actions/checkout@v4

     - name: Create .env file securely
       run: |
          set +x
          echo "TEST_SECRET=${{ secrets.TEST_SECRET }}" > src-tauri/.env

     - name: install dependencies (ubuntu only)
       if: matrix.platform == 'ubuntu-22.04'
       run: |
         sudo apt-get update
         sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

     - name: Install SQLite (Windows only)
       if: matrix.platform == 'windows-latest'
       run: |
         choco install sqlite

     - name: Download SQLite Precompiled Binaries (Windows only)
       if: matrix.platform == 'windows-latest'
       run: |
         Invoke-WebRequest -Uri "https://www.sqlite.org/2023/sqlite-dll-win64-x64-3420000.zip" -OutFile "sqlite.zip"
         Expand-Archive -Path "sqlite.zip" -DestinationPath "sqlite"

     - name: Configure SQLite Paths (Windows only)
       if: matrix.platform == 'windows-latest'
       run: |
         $env:LIB="$env:LIB;$env:GITHUB_WORKSPACE\sqlite"
         $env:INCLUDE="$env:INCLUDE;$env:GITHUB_WORKSPACE\sqlite"

     - name: Verify SQLite Installation (Windows only)
       if: matrix.platform == 'windows-latest'
       run: |
         dir $env:GITHUB_WORKSPACE\sqlite

     - name: Setup Bun
       uses: oven-sh/setup-bun@v1
       with:
         bun-version: latest

     - name: install Rust stable
       uses: dtolnay/rust-toolchain@stable
       with:
         targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

     - name: Rust cache
       uses: swatinem/rust-cache@v2
       with:
         workspaces: './src-tauri -> target'

     - name: install frontend dependencies
       run: bun install

     - name: Run Rust tests
       working-directory: ./src-tauri
       run: cargo test ${{ matrix.args }}

     - name: Clean up .env file
       run: rm src-tauri/.env
